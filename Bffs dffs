#include <stdio.h>

#define MAX 10

int graph[MAX][MAX];
int visited[MAX];
int queue[MAX];
int front = -1, rear = -1;
int vertices;

void createGraph() {
    int i, j;
    printf("Enter the number of vertices: ");
    scanf("%d", &vertices);
    
    printf("Enter adjacency matrix:\n");
    for (i = 0; i < vertices; i++) {
        visited[i] = 0;
        for (j = 0; j < vertices; j++) {
            scanf("%d", &graph[i][j]);
        }
    }
}

void BFS(int start) {
    int i, v;
    visited[start] = 1;
    printf("BFS traversal starting from vertex %d: ", start);
    printf("%d ", start);
    queue[++rear] = start;

    while (front != rear) {
        v = queue[++front];
        for (i = 0; i < vertices; i++) {
            if (graph[v][i] && !visited[i]) {
                printf("%d ", i);
                visited[i] = 1;
                queue[++rear] = i;
            }
        }
    }
    printf("\n");
}

void DFS(int start) {
    int i;
    printf("DFS traversal starting from vertex %d: ", start);
    printf("%d ", start);
    visited[start] = 1;

    for (i = 0; i < vertices; i++) {
        if (graph[start][i] && !visited[i]) {
            DFS(i);
        }
    }
}

int main() {
    int choice, start;
    while (1) {
        printf("\nMenu:\n");
        printf("1. Create Graph\n");
        printf("2. BFS Traversal\n");
        printf("3. DFS Traversal\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                createGraph();
                break;
            case 2:
                printf("Enter starting vertex for BFS: ");
                scanf("%d", &start);
                if (start < 0 || start >= vertices) {
                    printf("Invalid vertex!\n");
                    break;
                }
                for (int i = 0; i < vertices; i++) {
                    visited[i] = 0;
                }
                front = rear = -1;
                BFS(start);
                break;
            case 3:
                printf("Enter starting vertex for DFS: ");
                scanf("%d", &start);
                if (start < 0 || start >= vertices) {
                    printf("Invalid vertex!\n");
                    break;
                }
                for (int i = 0; i < vertices; i++) {
                    visited[i] = 0;
                }
                DFS(start);
                printf("\n");
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice!\n");
        }
    }
}
