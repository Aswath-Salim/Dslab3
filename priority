#include<stdio.h>
#define size 10
int front = -1,rear = -1;
struct PQ
{
    int e;
    int p;
    
}Q[10];

void enq()
{
    int temp1,temp2,i,j;
    if(rear==size-1)
    {
        printf("Priority queue is full\n");
    }
    else
    {
        if(front<0 && rear<0)
        {
            front=0;}
            rear=rear+1;
            printf("enter the item and its priority ");
            scanf("%d%d",&Q[rear].e,&Q[rear].p);
            for(i=0;i<rear-1;i++)
            {
                for(j=0;j<rear-i-1;j++)
                {
                    if(Q[j].p>Q[j+1].p)
                    {
                        temp1=Q[j].e;
                        temp2=Q[j].p;
                        Q[j].e=Q[j+1].e;
                        Q[j].p=Q[j+1].p;
                        Q[j+1].e=temp1;
                        Q[j+1].p=temp2;
                        
                    }
                }
            }
        
    }
}

void deq()
{
     if(front<0 && rear<0)
     {
         printf("queue is empty");
     }
     else
     {
         printf("deleted item=%d priority=%d",Q[front].e,Q[front].p);
         if(front==rear)
         {
             front=-1;
             rear=-1;
         }
         else
         {
             for(int i=0;i<=rear;i++)
             {
                 Q[i].e=Q[i+1].e;
                 Q[i].p=Q[i+1].p;
             }
         }
     }
}
     
     void display()
     {
         for(int i=front;i<=rear;i++)
         {
             printf("Item:%d,priority:%d\n",Q[i].e,Q[i].p);
         }
     }
void main()
{
    int c;
    do{
        printf("\n1.Enqueue.\n");
         printf("\n2.Dequeue.\n");
          printf("\n3.Display.\n");
           printf("\n4.Exit.\n");
            printf("Enter your choice:");
            scanf("%d",&c);
            switch(c)
            {
                case 1:
                enq();
                break;
                case 2:
                deq();
                break;
                case 3:
                display();
                break;
                case 4:
                printf("Exiting");
                break;
                default:
                printf("Invalid statement");
                break;
            }
    }while(c!=4);
}
