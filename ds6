#include <stdio.h>
#include <stdlib.h>

struct Node {
    int coefficient;
    int exponent;
    struct Node* next;
};

typedef struct Node Node;

int main() {
    Node *poly1 = NULL, *poly2 = NULL, *result = NULL;
    Node *temp;

    int coefficient, exponent;
    printf("Enter the first polynomial (coefficient exponent, terminate with -1 -1):\n");
    while (1) {
        scanf("%d %d", &coefficient, &exponent);
        if (coefficient == -1 && exponent == -1) {
            break;
        }
        temp = (Node*)malloc(sizeof(Node));
        temp->coefficient = coefficient;
        temp->exponent = exponent;
        temp->next = NULL;

        if (poly1 == NULL) {
            poly1 = temp;
        } else {
            Node* traverse = poly1;
            while (traverse->next != NULL) {
                traverse = traverse->next;
            }
            traverse->next = temp;
        }
    }


    printf("Enter the second polynomial (coefficient exponent, terminate with -1 -1):\n");
    while (1) {
        scanf("%d %d", &coefficient, &exponent);
        if (coefficient == -1 && exponent == -1) {
            break;
        }
        temp = (Node*)malloc(sizeof(Node));
        temp->coefficient = coefficient;
        temp->exponent = exponent;
        temp->next = NULL;

        if (poly2 == NULL) {
            poly2 = temp;
        } else {
            Node* traverse = poly2;
            while (traverse->next != NULL) {
                traverse = traverse->next;
            }
            traverse->next = temp;
        }
    }

 
    while (poly1 != NULL && poly2 != NULL) {
        temp = (Node*)malloc(sizeof(Node));
        temp->next = NULL;

        if (poly1->exponent > poly2->exponent) {
            temp->coefficient = poly1->coefficient;
            temp->exponent = poly1->exponent;
            poly1 = poly1->next;
        } else if (poly1->exponent < poly2->exponent) {
            temp->coefficient = poly2->coefficient;
            temp->exponent = poly2->exponent;
            poly2 = poly2->next;
        } else {
            temp->coefficient = poly1->coefficient + poly2->coefficient;
            temp->exponent = poly1->exponent;
            poly1 = poly1->next;
            poly2 = poly2->next;
        }

        if (result == NULL) {
            result = temp;
        } else {
            Node* traverse = result;
            while (traverse->next != NULL) {
                traverse = traverse->next;
            }
            traverse->next = temp;
        }
    }


    while (poly1 != NULL) {
        temp = (Node*)malloc(sizeof(Node));
        temp->coefficient = poly1->coefficient;
        temp->exponent = poly1->exponent;
        temp->next = NULL;

        Node* traverse = result;
        while (traverse->next != NULL) {
            traverse = traverse->next;
        }
        traverse->next = temp;

        poly1 = poly1->next;
    }

    while (poly2 != NULL) {
        temp = (Node*)malloc(sizeof(Node));
        temp->coefficient = poly2->coefficient;
        temp->exponent = poly2->exponent;
        temp->next = NULL;

        Node* traverse = result;
        while (traverse->next != NULL) {
            traverse = traverse->next;
        }
        traverse->next = temp;

        poly2 = poly2->next;
    }

 
    printf("Resultant polynomial after addition: ");
    temp = result;
    while (temp != NULL) {
        printf("%dx^%d", temp->coefficient, temp->exponent);
        temp = temp->next;
        if (temp != NULL) {
            printf(" + ");
        }
    }
    printf("\n");

    while (result != NULL) {
        temp = result;
        result = result->next;
        free(temp);
    }

    return 0;
}
